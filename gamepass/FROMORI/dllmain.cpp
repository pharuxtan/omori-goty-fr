#include <windows.h>
#include "xcurl.h"
#include "sigscan.h"

void WriteMem(void* address, void* data, size_t size) {
    DWORD OldProt;
    VirtualProtect(address, size, PAGE_EXECUTE_READWRITE, &OldProt);
    memcpy(address, data, size);
    VirtualProtect(address, size, OldProt, &OldProt);
}

BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReason, LPVOID lpReserved) {
    if (dwReason == DLL_PROCESS_ATTACH) {
        // Init AOB Scanner
        SigScan Scanner;

        // Get Chowdren statelist.png height MOV address
        uintptr_t ChowdrenStatelistHeightMOV = Scanner.FindPattern((char*)"Chowdren.exe",
                                                                   (char*)"\x41\xB8\x00\x00\x00\x00\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2\xE8\x00\x00\x00\x00\xBA\x00\x00\x00\x00\x48\x8D\x0D\x00\x00\x00\x00\x44\x8B\xC2",
                                                                   (char*)"xx????x????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxxx????x????xxx????xxx");

        // Write modified height to the memory
        BYTE NewHeight[2] = { 0x70, 0x02 };
        WriteMem((void*)(ChowdrenStatelistHeightMOV + 2), (void*)(NewHeight), 2);

        // Get Chowdren Language CMP
        uintptr_t ChowdrenLanguageCMP = Scanner.FindPattern((char*)"Chowdren.exe",
                                                            (char*)"\xBF\x00\x00\x00\x00\x83\xFB\x03",
                                                            (char*)"x????xxx");

        // Write modified minimum strlen to get english language to the memory
        BYTE NewCondition[1] = { 0x7F };
        WriteMem((void*)(ChowdrenLanguageCMP + 7), (void*)(NewCondition), 1);
    } else if (dwReason == DLL_PROCESS_DETACH) {
        // Free DLL
        FreeLibrary(hModule);
    }

    return TRUE;
}
